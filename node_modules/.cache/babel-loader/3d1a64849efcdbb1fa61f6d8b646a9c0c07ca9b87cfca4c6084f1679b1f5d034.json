{"ast":null,"code":"import'./App.css';import{useEffect,useState}from'react';import Agendamentos from'./componentes/Agendamentos/agendamento';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){const[agendamentos,setAgendamentos]=useState([]);useEffect(()=>{fetch(\"http://localhost:3001/agendamentos\").then(res=>res.json()).then(data=>setAgendamentos(data)).catch(err=>alert(\"Alguma coisa deu errado ao tenta acessar o banco de dados\",err));},[]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Agendamentos,{agendamentos:agendamentos})});}export default App;","map":{"version":3,"names":["useEffect","useState","Agendamentos","jsx","_jsx","App","agendamentos","setAgendamentos","fetch","then","res","json","data","catch","err","alert","children"],"sources":["C:/Users/caiu/Desktop/Projetos pessoais/pixeon/src/App.js"],"sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport Agendamentos from './componentes/Agendamentos/agendamento';\n\nfunction App() {\n  const [agendamentos, setAgendamentos] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/agendamentos\")\n    .then((res) => res.json())\n    .then((data) => setAgendamentos(data))\n    .catch((err) => alert(\"Alguma coisa deu errado ao tenta acessar o banco de dados\", err))\n  }, [])\n  \n  return (\n    <div>\n      <Agendamentos agendamentos={agendamentos}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,WAAW,CAClB,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,YAAY,KAAM,wCAAwC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAEpDD,SAAS,CAAC,IAAM,CACdQ,KAAK,CAAC,oCAAoC,CAAC,CAC1CC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKL,eAAe,CAACK,IAAI,CAAC,CAAC,CACrCC,KAAK,CAAEC,GAAG,EAAKC,KAAK,CAAC,2DAA2D,CAAED,GAAG,CAAC,CAAC,CAC1F,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEV,IAAA,QAAAY,QAAA,cACEZ,IAAA,CAACF,YAAY,EAACI,YAAY,CAAEA,YAAa,CAAC,CAAC,CACxC,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}